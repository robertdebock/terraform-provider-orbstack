name: Examples CI

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  examples:
    name: Run example
    runs-on: macos-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - path: examples/config
          - path: examples/docker-config
          - path: examples/k8s_config
          - path: examples/network-config
          - path: examples/machine-config
          - path: examples/machine
          - path: examples/cloud-init
          - path: examples/data-source-machine
          - path: examples/validate-image
    env:
      TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.tf-plugin-cache
      TF_CLI_CONFIG_FILE: ${{ github.workspace }}/.tfrc
      PROVIDER_BUILD_DIR: ${{ github.workspace }}/.provider
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-

      - name: Ensure plugin cache dir
        run: |
          mkdir -p "$TF_PLUGIN_CACHE_DIR" "$PROVIDER_BUILD_DIR"

      - name: Install OrbStack (Homebrew cask)
        run: |
          brew update
          brew install --cask orbstack

      - name: Start OrbStack
        run: |
          orbctl version || true
          orbctl start || true

      - name: Build provider
        run: |
          go build -v -o terraform-provider-orbstack ./cmd/terraform-provider-orbstack
          mv terraform-provider-orbstack "$PROVIDER_BUILD_DIR/terraform-provider-orbstack"

      - name: Write Terraform CLI config (dev_overrides)
        run: |
          cat > "$TF_CLI_CONFIG_FILE" <<'EOF'
          provider_installation {
            dev_overrides {
              # Map the published address to our locally built binary directory
              "registry.terraform.io/robertdebock/orbstack" = "${PROVIDER_BUILD_DIR}"
            }
            direct {}
          }
          plugin_cache_dir = "${TF_PLUGIN_CACHE_DIR}"
          EOF
        shell: bash

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Apply
        working-directory: ${{ matrix.path }}
        run: terraform apply -auto-approve -input=false -no-color

      - name: Destroy
        if: always()
        working-directory: ${{ matrix.path }}
        run: terraform destroy -auto-approve -input=false -no-color

