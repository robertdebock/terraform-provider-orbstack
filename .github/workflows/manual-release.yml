name: Manual Release (build, sign, upload assets)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (no leading v), e.g. 1.0.0"
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ inputs.version }}
      GPG_KEY: ${{ secrets.GPG_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Import GPG private key
        if: env.GPG_KEY != ''
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
          # Optional passphrase setup for loopback if your key requires it
          if [ -n "$GPG_PASSPHRASE" ]; then
            echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
            echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
            gpgconf --kill gpg-agent || true
          fi
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build, package, checksum, sign
        run: |
          sed -i "s/^VERSION=.*/VERSION=${VERSION}/" build.sh
          chmod +x build.sh
          if [ -n "$GPG_PASSPHRASE" ]; then
            export GPG_TTY=$(tty)
            export GPG_KEY
            # Use loopback for passphrase if needed
            echo "Using provided GPG key and passphrase"
          fi
          ./build.sh

      - name: Create or update Git tag
        run: |
          git fetch --tags
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "Tag v${VERSION} already exists"
          else
            git tag "v${VERSION}"
            git push origin "v${VERSION}"
          fi

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          files: |
            terraform-provider-orbstack_${{ env.VERSION }}_darwin_arm64.zip
            terraform-provider-orbstack_${{ env.VERSION }}_SHA256SUMS
            terraform-provider-orbstack_${{ env.VERSION }}_SHA256SUMS.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


